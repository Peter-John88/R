#####1.此例来自谢益辉的论文#####

# 导入构建决策树所需要的库
library("rpart")
library("rpart.plot")
library("survival")
# 查看本次构建决策树所用的数据源
stagec
# 通过 rpart 函数构建决策树
fit <- rpart(Surv(pgtime,pgstat)~age+eet+g2+grade+gleason+ploidy,stagec,method="exp")
# 查看决策树的具体信息
print(fit)
printcp(fit)
# 绘制构建完的决策树图
plot(fit, uniform=T, branch=0.6, compress=T)
text(fit, use.n=T)
# 通过 prune 函数剪枝
fit2 <- prune(fit, cp=0.016)
# 绘制剪枝完后的决策树图
plot(fit2, uniform=T, branch=0.6, compress=T)
text(fit2, use.n=T)


#####2.用iris数据集做例子#####
# 导入构建决策树所需要的库
library("rpart")
library("rpart.plot")
library("survival")
# 查看本次构建决策树所用的数据源
iris
# 查看变量的类型
str(iris)
# 通过 rpart 函数构建决策树
fit <- rpart(Species~Sepal.Length + Sepal.Width + Petal.Length + Petal.Width,iris,method="class")
# 查看决策树的具体信息
print(fit)
printcp(fit)
# 绘制构建完的决策树图
plot(fit, uniform=T, branch=0.6, compress=T)
text(fit, use.n=T)
# 通过 prune 函数剪枝
fit2 <- prune(fit, cp=0.016)
# 绘制剪枝完后的决策树图
plot(fit2, uniform=T, branch=0.6, compress=T)
text(fit2, use.n=T)
#做预测
predict(fit2,iris)

#####3.随机森林的例子#####
#randomForest包
data <- iris  
library(randomForest)  
system.time(Randommodel <- randomForest(Species ~ ., data=data,importance = TRUE, proximity = FALSE, ntree = 100))  
print(Randommodel) 
importance(Randommodel,type=1)  #平均误差下降度量
importance(Randommodel,type=2)  #平均gini下降度量
varImpPlot(Randommodel)   #变量重要性可视化
prediction <- predict(Randommodel, data[,1:5],type="class")  #还有response回归类型  

table(observed =data$Species,predicted=prediction)   

#party包
library(party)  
#与randomForest包不同之处在于，party可以处理缺失值，而这个包可以  
set.seed(42)  
crf<-cforest(Species~.,control = cforest_unbiased(mtry = 2, ntree = 50), data=iris)  
varimpt<-data.frame(varimp(crf))   #varimpt is larger, the var is more important 

